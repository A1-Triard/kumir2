<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
        "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
        []>
<chapter xmlns="http://www.oasis-open.org/docbook/xml/4.5/">
    <title>Структура программы</title>
    <section>
        <title>Программа</title>
        <section>
            <title>Общие сведения</title>
            <para>
                Основная структурная единица языка Кумир -- <emphasis>алгоритм</emphasis>.
                Программа на языке КуМир в простейшем случае состоит из нескольких алгоритмов, следующих один за другим.
                Перед первым алгоритмом может располагаться
                <emphasis>вступление</emphasis>
                -- любая неветвящаяся
                последовательность команд. Например, это могут быть строки с комментариями, описаниями
                общих величин программы, командами присваивания им начальных значений.
            </para>
            <para>
                Алгоритмы в программе должны располагаться вплотную друг к другу, между ними
                могут быть только пустые строки и строки с комментариями.
            </para>
        </section>
        <section>
            <title>Выполнение программы</title>
            <para>
                Выполнение программы состоит в выполнении вступления, если оно присутствует, а затем --
                первого алгоритма (он называется<emphasis>основным алгоритмом программы</emphasis>). Остальные алгоритмы
                будут выполняться при вызове из первого алгоритма или из других ранее вызванных алгоритмов.
            </para>
            <example>
                <title>Программа со вступление, основным алгоритмом без имени и вспомогательным алгоритмом</title>
                <programlisting role="kumir"><![CDATA[
| Это вступление
цел длина, ширина
длина := 10
ширина := 15
| Это - основной алгоритм.
| У него может не быть имени
алг
нач
  вывод "Площадь равна ", площадь
кон
| Это - вспомогательный алгоритм.
| При выполнении он вызывается из основного.
| У вспомогательного алгоритма обязательно
| должно быть имя и могут быть параметры.
алг цел площадь
нач
  знач := длина*ширина
кон]]>
                </programlisting>
            </example>
            <example>
                <title>Программа со вступление, основным алгоритмом и вспомогательным алгоритмом</title>
                <programlisting role="kumir"><![CDATA[
| Это вступление
вещ длина, ширина, масса
длина := 10
ширина := 15
алг
нач
  вещ S
  S := площадь
  вещ плотность, масса
  плотность := 6.8 | г/см**2
  найти массу пластинки(плотность, S, масса)
  вывод "Масса пластинки равна ", масса
кон

| Это - вспомогательный алгоритм.
| При выполнении он вызывается из основного алгоритма.
| У вспомогательного алгоритма
| обязательно должно быть имя.
алг вещ площадь
нач
  знач := длина*ширина
кон

| Это - еще один вспомогательный алгоритм.
| При выполнении он вызывается из
| другого вспомогательного алгоритма.
| У вспомогательного алгоритма
| обязательно должно быть имя.
| У вспомогательного алгоритма могут быть параметры
алг найти массу пластинки(арг вещ p, S, рез вещ m)
нач
  m := p*S
кон]]>
                </programlisting>
            </example>
        </section>
    </section>
    <section>
        <title>Описание алгоритма</title>
        <section>
            <title>Общий вид описания</title>
            <para>Алгоритм на языку Кумир записывается в следующем виде:</para>
            <programlisting role="kumir"><![CDATA[
алг тип_алгоритма имя_алгоритма (описание_параметров)
  дано условие_применимости_алгоритма
  надо цель_выполнения_алгоритма
нач
  последовательность команд
кон]]>
            </programlisting>
            <para>
                Описание алгоритма состоит из:
                <itemizedlist>
                    <listitem>
                        <para>заголовка (часть до служебного слова <code language="kumir">нач</code>);</para>
                    </listitem>
                    <listitem>
                        <para>тела алгоритма (часть между словами <code language="kumir">нач</code> и
                            <code language="kumir">кон</code>).</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Алгоритмы-процедуры и алгоритмы-функции</title>
            <para>
                Алгоритмы делятся на
                <emphasis>алгоритмы-процедуры</emphasis>
                и<emphasis>алгоритмы-функции</emphasis>.
                Алгоритм-функция после выполнения возвращает значение-результат. Правила описания алгоритмов-процедур
                и алгоритмов-функций имеют два отличия.
            </para>
            <para>
                Во-первых, для алгоритмов-функций на месте тип_алгоритма должен быть указан
                один из простых типов алгоритмического языка (<code language="kumir">вещ</code>,
                <code language="kumir">цел</code> и&nbsp;т.&nbsp;д.), определяющий тип
                значений, которые принимает данная функция. Для алгоритмов-процедур тип_алгоритма
                должен быть опущен.
            </para>
            <para>
                Во-вторых, в теле алгоритма-функции необходимо использовать служебную величину
                <code language="kumir">знач</code>, в которую записывается вычисленное значение функции. В теле
                алгоритма-процедуры величину <code language="kumir">знач</code> использовать нельзя.
            </para>
            <para>
                Алгоритмы-функции и алгоритмы-процедуры отличаются также по способу вызова<xref linkend="aaa"/>.
            </para>
            <example>
                <title>Пример алгоритма-процедуры</title>
                <programlisting role="kumir"><![CDATA[
алг гипотенуза (вещ a, b, рез вещ c)
  дано a>=0 и b>=0 | длины катетов треугольника
  надо | c = длинa гипотенузы этого треугольника
нач
  c := sqrt( a**2 + b**2 )
кон]]>
                </programlisting>
            </example>
            <example>
                <title>Пример алгоритма-функции</title>
                <programlisting role="kumir"><![CDATA[
алг вещ площадь (вещ a, b, c)
  дано a>=0 и b>=0 и c>=0 | длины сторон треугольника
  надо | значение функции равно площади этого треугольника
нач
  вещ p | полупериметр
  p := (a+b+c)/2
  знач := sqrt(p*(p-a)*(p-b)*(p-c))
кон]]>
                </programlisting>
            </example>
        </section>
    </section>
    <section>
        <title>Параметры алгоритма</title>
        <para>
            Если алгоритм не имеет параметров (аргументов и результатов), то в строке <code language="kumir">алг</code>
            записывается только имя алгоритма.
        </para>
        <para>
            Если у алгоритма есть параметры, то их описание заключается в круглые скобки после
            имени алгоритма в строке <code language="kumir">алг</code>. Описание содержит информацию о типах параметров
            и о том, являются они аргументами или результатами:
            <itemizedlist>
                <listitem>
                    <para><code language="kumir">арг</code> -- описания параметров-аргументов;</para>
                </listitem>
                <listitem>
                    <para><code language="kumir">рез</code> -- описания параметров-результатов;</para>
                </listitem>
                <listitem>
                    <para><code language="kumir">аргрез</code> (или <code language="kumir">арг рез</code>) -- описания
                        параметров, которые одновременно являются и аргументами, и результатами.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            После каждого из служебных слов <code language="kumir">арг</code>, <code language="kumir">рез</code>,
            <code language="kumir">аргрез</code> должно располагаться одно или
            несколько описаний одной или нескольких величин. Имена величин и описания разделяются запятыми.
            Если в начале описания нет служебных слов <code language="kumir">арг</code>, <code language="kumir">рез</code>,
            <code language="kumir">аргрез</code>, то предполагается, что первыми идут описания аргументов
            (<code language="kumir">арг</code>).
        </para>
        <example>
            <title>Описание алгоритма с параметрами</title>
            <programlisting role="kumir"><![CDATA[
алг
нач
  вещ число
  цел целое, сотые
  лит запись
  число := 3.14
  тест(целое, сотые, запись, число)
кон

алг тест (рез цел m, n, лит т, арг вещ y)
нач
  вещ r
  m := int(y)
  r := (y - m)*100
  n := int(r)
  т := вещ_в_лит(y)
кон]]>
            </programlisting>
        </example>
        <para>
            В заголовке алгоритма <code language="kumir">алг тест (рез цел m, n, лит т, арг вещ y)</code> служебное
            слово <code language="kumir">рез</code> относится к описаниям <code language="kumir">цел m, n</code>
            и <code language="kumir">лит т</code>, а параметр <code language="kumir">вещ y</code> будет аргументом.
        </para>
        <para>
            ВНИМАНИЕ: Запрещается писать в теле алгоритма команды, изменяющие значения
            параметров-аргументов (описанных как <code language="kumir">арг</code>). Результаты алгоритма
            (<code language="kumir">рез</code>, но не <code language="kumir">аргрез</code>)
            в начале выполнения алгоритма принимают неопределенные значения.
        </para>
    </section>
    <section>
        <title>Команды и строки</title>
        <para>
            В простейшем случае каждая простая команда и каждое ключевое слово в составных
            командах пишется на отдельной строке. Однако, чтобы сделать программу более компактной,
            можно "склеивать" несколько строк в одну. Это можно сделать в следующих
            случаях.
        </para>
        <section>
            <title>Использование точки с запятой</title>
            <para>Точка с запятой приравнивается к переносу строки.</para>
            <example>
                <title>Программа 1 и Программа 2 имеют одинаковый смысл</title>
                <programlisting role="kumir"><![CDATA[
| Программа 1 — сжатое написание
алг
нач
  цел а; вещ в
  а := 5; в := 0.1
кон
| Программа 2 — полное написание
алг
нач
  цел а
  вещ в
  а := 5
  в := 0.1
кон]]>
                </programlisting>
            </example>
        </section>
        <section>
            <title>Неявные переносы строк</title>
            <para>
                Для многих ключевых слов можно догадаться, что перед ними или после них должен быть
                перевод строки.
            </para>
            <para>
                "Неявные" переносы строк вставляются в следующих случаях:
                <itemizedlist>
                    <listitem>
                        <para>перед словами <code language="kumir">все</code>, <code language="kumir">кц</code>,
                            <code language="kumir">кц_при</code>;</para>
                    </listitem>
                    <listitem>
                        <para>после слов <code language="kumir">нач</code>, <code language="kumir">выбор</code>,
                            <code language="kumir">нц</code> (только в случае цикла нц-кц),
                            <code language="kumir">раз</code>;</para>
                    </listitem>
                    <listitem>
                        <para>перед и после слов <code language="kumir">то</code>, <code language="kumir">иначе</code>,
                            <code language="kumir">при</code>;</para>
                    </listitem>
                    <listitem>
                        <para>перед словом <code language="kumir">при</code> и после двоеточия в при-строке.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <example>
                <title>Использование неявных переносов строк</title>
                <programlisting role="kumir"><![CDATA[
алг
нач цел знак, вещ модуль
  вещ щ
  ввод щ
  модуль :=0; знак := 0
  если щ > 0 то
    модуль :=щ; знак := 1
  все
  если щ < 0 то модуль :=щ; знак := 1 все
кон]]>
                </programlisting>
            </example>
        </section>
    </section>
    <section>
        <title>Комментарии</title>
        <example>
            <title>Использование комментариев</title>
            <programlisting role="kumir"><![CDATA[
алг
  | Это алгоритм вычисления суммы двух чисел
нач
  цел а, б | объявляем величины
  ввод а, б | вводим значения с клавиатуры
  вывод а+б | посчитаем сумму чисел
кон]]>
            </programlisting>
        </example>
        <para>
            В этом алгоритме после знака <code language="kumir">|</code> в некоторых строках записаны комментарии. Такие
            комментарии разрешается помещать в конце любой строки, отделяя их знаком <code language="kumir">|</code>. Если
            комментарий занимает несколько строк, то знак <code language="kumir">|</code> перед комментарием надо ставить в
            каждой строке. Комментарии могут записываться в любой удобной для человека форме.
            При выполнении алгоритма компьютер полностью пропускает комментарии -- алгоритм
            выполнятеся так же, как если бы комментариев вообще не было.
        </para>
        <para>
            Таким образом, комментарии предназначены исключительно для человека -- они
            облегчают понимание алгоритма.
        </para>
    </section>
</chapter>
