[0] УСЛОВИЕ -> если МУСОР_МЕЖДУ_ЕСЛИ_ТО ТО : { processCorrectIf(); }

[0] МУСОР_МЕЖДУ_ЕСЛИ_ТО -> 0
[0] ТО -> то ФРАГМЕНТ_АЛГОРИТМА* ИНАЧЕ_ВСЕ : { processCorrectThen(); }
[0] ИНАЧЕ_ВСЕ -> все : { processCorrectFi(); }
[0] ИНАЧЕ_ВСЕ -> иначе ФРАГМЕНТ_АЛГОРИТМА* все : { processCorrectElse(); } { processCorrectFi(); }

[0] ВЫБОР -> выбор МУСОР_МЕЖДУ_ВЫБОР_ПРИ при ФРАГМЕНТ_АЛГОРИТМА* ПРИ* ИНАЧЕ_ВСЕ : { processCorrectSwitch(); } { processCorrectCase(); }
[0] МУСОР_МЕЖДУ_ВЫБОР_ПРИ -> 0
[0] ПРИ* -> при ФРАГМЕНТ_АЛГОРИТМА* : { processCorrectCase(); }
[0] ПРИ* -> 0

[0] ЦИКЛ -> нц ФРАГМЕНТ_АЛГОРИТМА* КОНЕЦ_ЦИКЛА : { processCorrectBeginOfLoop(); }
[0] КОНЕЦ_ЦИКЛА -> кц : { processCorrectEndOfLoop();}

[0] АЛГОРИТМ* -> 0
[0] АЛГОРИТМ* -> алг МУСОР_МЕЖДУ_АЛГ_НАЧ ДОКУМЕНТАЦИЯ ДАНО_НАДО ТЕЛО_АЛГОРИТМА : { processCorrectAlgHeader(); }
[0] МУСОР_МЕЖДУ_АЛГ_НАЧ -> 0
[0] ТЕЛО_АЛГОРИТМА -> нач ФРАГМЕНТ_АЛГОРИТМА* КОНЕЦ_АЛГОРИТМА : { processCorrectAlgBegin(); }
[0] ДОКУМЕНТАЦИЯ -> строка_документации МУСОР_МЕЖДУ_АЛГ_НАЧ ДОКУМЕНТАЦИЯ : { processCorrectDocLine(); }
[0] ДОКУМЕНТАЦИЯ -> 0
[0] ДАНО_НАДО -> 0
[0] ДАНО_НАДО -> ограничение_алгоритма МУСОР_МЕЖДУ_АЛГ_НАЧ ДАНО_НАДО : { processCorrectRestrictionLine(); }
[0] КОНЕЦ_АЛГОРИТМА -> кон : { processCorrectAlgEnd(); }

[0] ПРОСТАЯ_СТРОКА* -> простое_предложение : { appendSimpleLine(); }
[0] ПРОСТАЯ_СТРОКА* -> 0

[0] ФРАГМЕНТ_АЛГОРИТМА* -> 0
[0] ФРАГМЕНТ_АЛГОРИТМА* -> УСЛОВИЕ
[0] ФРАГМЕНТ_АЛГОРИТМА* -> ЦИКЛ
[0] ФРАГМЕНТ_АЛГОРИТМА* -> ВЫБОР
[0] ФРАГМЕНТ_АЛГОРИТМА* -> ПРОСТАЯ_СТРОКА*

[0] ЛИНЕЙНАЯ_СТРОКА* -> ПРОСТАЯ_СТРОКА*
[0] ЛИНЕЙНАЯ_СТРОКА* -> 0

[0] ИСПОЛНИТЕЛЬ* -> исп ЛИШНИЙ_НАЧ_У_ИСПОЛНИТЕЛЯ ЛИНЕЙНАЯ_СТРОКА* АЛГОРИТМ* КОНЕЦ_ИСПОЛНИТЕЛЯ : { processCorrectModuleBegin(); } 
[0] КОНЕЦ_ИСПОЛНИТЕЛЯ -> кон_исп : { processCorrectModuleEnd(); }
#[0] ИСПОЛНИТЕЛЬ* -> исп ЛИНЕЙНАЯ_СТРОКА* АЛГОРИТМ* кон_исп : { processCorrectModuleBegin(); } { processCorrectModuleEnd(); }
[0] ИСПОЛНИТЕЛЬ* -> 0
[0] ЛИШНИЙ_НАЧ_У_ИСПОЛНИТЕЛЯ -> 0

[0] START -> begin ЗАГРУЗКА* ЛИНЕЙНАЯ_СТРОКА* ОШИБОЧНАЯ_ЗАГРУЗКА* АЛГОРИТМЫ_ВНЕ_ИСПОЛНИТЕЛЯ* ИСПОЛНИТЕЛЬ* МУСОР_В_КОНЦЕ_ПРОГРАММЫ*

[0] АЛГОРИТМЫ_ВНЕ_ИСПОЛНИТЕЛЯ* -> СТРОКА_ВНЕ_АЛГОРИТМА* АЛГОРИТМ*
[0] АЛГОРИТМЫ_ВНЕ_ИСПОЛНИТЕЛЯ* -> АЛГОРИТМ*
[0] АЛГОРИТМЫ_ВНЕ_ИСПОЛНИТЕЛЯ* -> 0

[0] СТРОКА_ПЕРЕД_АЛГОРИТМОМ* -> 0
[0] ОШИБОЧНАЯ_ЗАГРУЗКА* -> 0
[0] СТРОКА_ВНЕ_АЛГОРИТМА* -> 0
[0] МУСОР_В_КОНЦЕ_ПРОГРАММЫ* -> 0

[0] ЗАГРУЗКА* -> 0
[0] ЗАГРУЗКА* -> использовать : { processCorrectLoad(); }

