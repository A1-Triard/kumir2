/*
DO NOT EDIT THIS FILE!

This file is autogenerated from "--update" and will be replaced
every build time

*/

// Self includes
#include "complexnumbersmodulebase.h"
#include "complexnumbersplugin.h"

// Kumir includes
#include <kumir2-libs/extensionsystem/kplugin.h>

// Qt includes
#include <QtCore>
#include <QtGui>

namespace ActorComplexNumbers {

ComplexNumbersModuleBase::ComplexNumbersModuleBase(ExtensionSystem::KPlugin* parent)
    : QObject(parent)
{
    bool hasGui = true;
#ifdef Q_OS_LINUX
    hasGui = getenv("DISPLAY")!=0;
#endif
    if (hasGui) {
        
    }
}

/* protected */ const ExtensionSystem::CommandLine& ComplexNumbersModuleBase::commandLineParameters() const
{
    ComplexNumbersPlugin * plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    return plugin->commandLineParameters_;
}

/* public virtual */ void ComplexNumbersModuleBase::handleGuiReady()
{
}

/* public virtual */ QString ComplexNumbersModuleBase::initialize(const QStringList &configurationParameters, const ExtensionSystem::CommandLine & runtimeParameters)
{
    Q_UNUSED(configurationParameters);
    Q_UNUSED(runtimeParameters);

    // Return error text or an empty string on successfull  initialization
    return QString();
}

/* public virtual */ bool ComplexNumbersModuleBase::isSafeToQuit()
{
    return true;
}

/* public virtual slot */ void ComplexNumbersModuleBase::loadActorData(QIODevice * source)
{
    Q_UNUSED(source);  // By default do nothing

}

/* public */ QWidget* ComplexNumbersModuleBase::mainWidget() const
{
    return nullptr;
}

/* public */ QList<QMenu*> ComplexNumbersModuleBase::moduleMenus() const
{
    bool hasGui = true;
#ifdef Q_OS_LINUX
    hasGui = getenv("DISPLAY")!=0;
#endif
    if (hasGui) {
        QList<QMenu*> result;
        
        return result;
    }
    else {
        return QList<QMenu*>();
    }
}

/* protected */ void ComplexNumbersModuleBase::msleep(unsigned long msecs)
{
    ComplexNumbersPlugin* plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    plugin->msleep(msecs);
}

/* public */ QDir ComplexNumbersModuleBase::myResourcesDir() const
{
    ComplexNumbersPlugin* plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    return plugin->myResourcesDir();
}

/* public */ ExtensionSystem::SettingsPtr ComplexNumbersModuleBase::mySettings() const
{
    ComplexNumbersPlugin* plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    return plugin->mySettings();
}

/* public */ QWidget* ComplexNumbersModuleBase::pultWidget() const
{
    return nullptr;
}

/* public virtual slot */ void ComplexNumbersModuleBase::setAnimationEnabled(bool enabled)
{
    Q_UNUSED(enabled);
}

/* protected */ void ComplexNumbersModuleBase::setError(const QString & errorText)
{
    ComplexNumbersPlugin* plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    plugin->errorText_ = errorText;
}

/* protected */ void ComplexNumbersModuleBase::sleep(unsigned long secs)
{
    ComplexNumbersPlugin* plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    plugin->sleep(secs);
}

/* public virtual */ QVariantList ComplexNumbersModuleBase::templateParameters() const
{
    ComplexNumbersPlugin * plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    return plugin->defaultTemplateParameters();
}

/* protected */ void ComplexNumbersModuleBase::usleep(unsigned long usecs)
{
    ComplexNumbersPlugin* plugin = qobject_cast<ComplexNumbersPlugin*>(parent());
    plugin->usleep(usecs);
}



} // namespace ActorComplexNumbers
